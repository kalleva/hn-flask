status: 200
server: nginx
date: Thu, 06 Jul 2017 16:28:22 GMT
content-type: application/json; charset=utf-8
content-length: 2417
connection: keep-alive
access-control-allow-origin: *
cache-control: no-cache
strict-transport-security: max-age=31556926; includeSubDomains; preload
content-location: https://hacker-news.firebaseio.com/v0/item/14711415.json?print=pretty

{
  "by" : "araes",
  "descendants" : 0,
  "id" : 14711415,
  "score" : 2,
  "text" : "After a trek in Nepal this year, I had a month to relax, and an idea from my trek to work on, but no computer in reach. I had been experimenting with phone IDEs though and decided to see what could be accomplished.<p>The end result of a month at a few hours a day using AIDE is DreamPearl (source on Github), a planetary formation simulator that does all of the plate mechanics using computational fluid dynamics (CFD).  Currently working on volumetric air&#x2F;water cycle.<p>Quick (6s) video to demonstrate.\n<a href=\"https:&#x2F;&#x2F;youtu.be&#x2F;5Nv9Klqlc2M\" rel=\"nofollow\">https:&#x2F;&#x2F;youtu.be&#x2F;5Nv9Klqlc2M</a><p>Github link\n<a href=\"https:&#x2F;&#x2F;github.com&#x2F;Araesmojo&#x2F;DreamPearl\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;Araesmojo&#x2F;DreamPearl</a><p>Things I like:\nPlate mechanics as CFD &quot;dirt&quot; particles - plates are defined as surface regions based on target size and then dirt flows across them like a conveyor.  Models pressure, drag, and frictional acc. in non-z-locking sphere built from a split D20.<p>3D as 2D - CFD calculations are performed on a 3D surface with no artficial wrapping or edges, but particles are tricked into believing they are 2D by performing all operations in a tile localized frame of reference.<p>Shaders by parts - while the move to vertex&#x2F;frag shaders opened a lot of flexibilty, they also add much complexity.  My approach decouples shaders into subsegments that can be superimposed to create a full shader using lines like shaderProgram = BuildShaderFromParts( &quot;based3d&quot;, &quot;tex&quot;, &quot;light&quot; ) where each call out references only the relevant portions in a file such as &quot;light.gg&quot; or &quot;tex.gg&quot;.  They can be mixed and matched so that swapping &quot;point&quot; for &quot;base3d&quot; in the above example would create a floating 2d sprite instead.<p>Barnes-Hutt tree decomposed space and lookup in a non z-locking spherical space w multiple options for level of detail (LoD)<p>Useful for: using opengl on a phone, implementing a CFD code, strategy&#x2F;adventure games that need a random world, examples of procedural creation that diverge from the standard perlin  &#x2F; voronoi noise.",
  "time" : 1499357364,
  "title" : "Show HN: Planetary CFD on a Phone",
  "type" : "story"
}
